/**
做一个简单的链表。
*/

//链表的节点
class ListNode{
    int value;
    ListNode next;

    ListNode (int v){
        value = v;
    }
}

//链表
class LinkedList{
    ListNode start;
    ListNode end;

    //在外部添加新节点
    void add(int value){
        ListNode node = ListNode(value);
        if (start == null){
            start = node;
            end = node;
        }
        else{
            end.next = node;
            end = node;
        }
    }

    //打印所有节点内容
    void dump(){
        ListNode node = start;
        while (node != null){
            println(node.value);
            node = node.next;
        }
    }

    //高阶函数功能，参数是一个函数，对每个成员做一个计算，形成一个新的LinkedList
    LinkedList map(function int(int) fun){
        ListNode node = start;
        LinkedList newList = LinkedList();
        while (node != null){
            int newValue = fun(node.value);
            newList.add(newValue);
            node = node.next;
        }
    }
}

int square(int value){
    return value * value;
}

LinkedList list = LinkedList();
list.add(2);
list.add(3);
list.add(5);
list.dump();

LinkedList newList = list.map(square);
newList.dump();
